* Audio Programming Class (AP)
  :PROPERTIES:
  :CUSTOM_ID: audio-programming-class-ap
  :END:

[[file:SuperMiam/SuperMiam/AP/images/SCScreenshot.png]]

The course aims to introduce students to programming of musical software
using the SuperCollider[fn:2]
(open-source) programming language, a state of the art platform for
audio synthesis and algorithmic composition. It will elaborate in
programming concepts for real time sound synthesis software used in various
contexts including laptop performances to interactive installations and electroacoustic works.

| Week | Date        | Topic                                                                               | Demos     |
|------+-------------+-------------------------------------------------------------------------------------+-----------|
|    1 | February 7  | "Hello World!" Introduction in SC and the IDE.                                      |           |
|    2 | February 14 | Server vs. SClang architecture. Mathematical operations, arrays, scoping variables. |           |
|    3 | February 21 | Functions, passing arguments, and data manipulation.                                |           |
|    4 | February 28 | SynthDefs, Synths, and Busses synthesis techniques, and signal manipulation.        | SynthDefs |
|    5 | March 7     | Control/interaction with SynthDefs (coninued from Feb. 28).                         |           |
|    6 | March 14    | Manipulating SynthDef signals using effects and busses (coninued from March 7).     |           |
|    7 | March 21    | Granulation with patterns of SC.                                                    |           |
|    8 | March 28    | Mid term break.                                                                     |           |
|    9 | April 4     | Algorithmic composition (events, streams, patterns, and stochastic processes).      |           |
|   10 | April 11    | Scheduling: tasks routines and /just in time/ scheduling in SC.                     |           |
|   11 | April 18    | Sound analysis (FFT).                                                               |           |
|   12 | April 25    | JITLib overview: Ndefs, placeholders and proxies.                                   |           |
|   13 | May 2       | Graphical User Interfaces (GUI) in SC.                                              |           |
|   14 | May 9       | External communication, controlers and OSC.                                         |           |
|   15 | May 16      | Networking in SC.                                                                   |           |
|   16 | June 1      | Final project (digital instrument/live performance environment).                    |           |

* Suggested topics
- Introduction:
  - "Hello World!" and the IDE.
  - Scoping variables (global vs. local variables).
  - Parens (calculations).
  - Arrays (ordered collections).
  - Functions (the building blocks of programs).
  - Function callbacks and passing arguments.
  - Functional programming and Operators.
- Digital Signal Processing (DSP):
  - Functions and sound synthesis.
  - UGens (audio unit generators).
  - Synth definitions and functions.
- Recording and generating audio files.
- Sound Synthesis Techniques:
  - Additive.
  - Subtractive.
  - Granulation.
- Control and interaction:
  - Interacting with SynthDefs, algorithmic composition.
  - Higher level control of SynthDefs (Streams & Events).
  - Specs (mapping and manipulation of control signals).
- External communication in SC:
  - Communication protocol implementations.
  - Mapping of external controllers/hardware interfaces.
- Networking in SC:
  - Working locally (i.e., Pure Data[fn:1] and SC).
  - Remote Server communication.

* Footnotes

[fn:1] https://puredata.info/

[fn:2] http://supercollider.github.io/
